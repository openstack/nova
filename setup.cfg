[metadata]
name = nova
summary = Cloud computing fabric controller
description_file =
    README.rst
author = OpenStack
author_email = openstack-discuss@lists.openstack.org
url = https://docs.openstack.org/nova/latest/
project_urls =
    Bug Tracker = https://bugs.launchpad.net/nova/
    Documentation = https://docs.openstack.org/nova/
    Source Code = https://opendev.org/openstack/nova
python_requires = >=3.6
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: Implementation :: CPython

[extras]
osprofiler =
    osprofiler>=1.4.0 # Apache-2.0

[files]
data_files =
    etc/nova =
        etc/nova/api-paste.ini
        etc/nova/rootwrap.conf
    etc/nova/rootwrap.d = etc/nova/rootwrap.d/*
packages =
    nova

[entry_points]
oslo.config.opts =
    nova.conf = nova.conf.opts:list_opts
oslo.config.opts.defaults =
    nova.conf = nova.config:set_lib_defaults
oslo.policy.enforcer =
    nova = nova.policy:get_enforcer
oslo.policy.policies =
    # The sample policies will be ordered by entry point and then by list
    # returned from that entry point. If more control is desired split out each
    # list_rules method into a separate entry point rather than using the
    # aggregate method.
    nova = nova.policies:list_rules
nova.api.extra_spec_validators =
    accel = nova.api.validation.extra_specs.accel
    aggregate_instance_extra_specs = nova.api.validation.extra_specs.aggregate_instance_extra_specs
    capabilities = nova.api.validation.extra_specs.capabilities
    hw = nova.api.validation.extra_specs.hw
    hw_rng = nova.api.validation.extra_specs.hw_rng
    hw_video = nova.api.validation.extra_specs.hw_video
    null = nova.api.validation.extra_specs.null
    os = nova.api.validation.extra_specs.os
    pci_passthrough = nova.api.validation.extra_specs.pci_passthrough
    powervm = nova.api.validation.extra_specs.powervm
    quota = nova.api.validation.extra_specs.quota
    resources = nova.api.validation.extra_specs.resources
    traits = nova.api.validation.extra_specs.traits
    vmware = nova.api.validation.extra_specs.vmware
nova.compute.monitors.cpu =
    virt_driver = nova.compute.monitors.cpu.virt_driver:Monitor
nova.compute.monitors.compute_node =
    vmware_monitor = nova.compute.monitors.compute_node.vmware_monitor:Monitor

console_scripts =
    nova-api = nova.cmd.api:main
    nova-api-metadata = nova.cmd.api_metadata:main
    nova-api-os-compute = nova.cmd.api_os_compute:main
    nova-bigvm = nova.cmd.bigvm:main
    nova-compute = nova.cmd.compute:main
    nova-conductor = nova.cmd.conductor:main
    nova-manage = nova.cmd.manage:main
    nova-novncproxy = nova.cmd.novncproxy:main
    nova-console-mks = nova.cmd.mksproxy:main
    nova-policy = nova.cmd.policy:main
    nova-rootwrap = oslo_rootwrap.cmd:main
    nova-rootwrap-daemon = oslo_rootwrap.cmd:daemon
    nova-scheduler = nova.cmd.scheduler:main
    nova-serialproxy = nova.cmd.serialproxy:main
    nova-spicehtml5proxy = nova.cmd.spicehtml5proxy:main
    nova-status = nova.cmd.status:main
    nova-shellinaboxproxy = nova.cmd.shellinaboxproxy:main
wsgi_scripts =
    nova-api-wsgi = nova.api.openstack.compute.wsgi:init_application
    nova-metadata-wsgi = nova.api.metadata.wsgi:init_application

[mypy]
show_column_numbers = true
show_error_context = true
ignore_missing_imports = true
follow_imports = skip
incremental = true
check_untyped_defs = true
warn_unused_ignores = true
